[base]
default          = none
unknown-token    = red,bold,underline
commandseparator = magenta,bold
redirection      = magenta,bold
here-string-tri  = magenta,bold
here-string-text = bg:white
here-string-var  = white,bold
exec-descriptor  = yellow,bold
comment          = blue,bold
correct-subtle   = white,bold
incorrect-subtle = red,bold
subtle-bg        = bg:black
secondary        = 
recursive-base   = 

[command-point]
reserved-word  = blue,bold
alias          = green,underline
suffix-alias   = green,underline
global-alias   = green,underline,bold
builtin        = green,bold
function       = green,bold
command        = green,bold
subcommand     = white,bold
precommand     = green
hashed-command = black,bg:white
single-sq-bracket = blue,bold
double-sq-bracket = blue,bold
double-paren   = blue,bold

[paths]
path          = blue,underline,bold
pathseparator = none
path-to-dir   = blue,underline,bold
globbing      = blue,bold
globbing-ext  = cyan,bold

[brackets]
paired-bracket = yellow,bold
bracket-level-1 = green,bold
bracket-level-2 = blue,bold
bracket-level-3 = magenta,bold

[arguments]
single-hyphen-option   = yellow,underline
double-hyphen-option   = yellow,underline
back-quoted-argument   = none
single-quoted-argument = white,bold
double-quoted-argument = white,bold
dollar-quoted-argument = white,bold

[in-string]
; backslash in $'...'
back-dollar-quoted-argument           = blue,bold
; backslash or $... in "..."
back-or-dollar-double-quoted-argument = blue,bold

[other]
variable             = white
assign               = none
assign-array-bracket = blue
history-expansion    = blue,bold

[math]
mathvar = white,bold
mathnum = magenta,bold
matherr = red,bold

[for-loop]
forvar = white,bold
fornum = magenta,bold
; operator
foroper = blue,bold
; separator
forsep = blue,bold

[case]
case-input       = none
case-parentheses = blue
case-condition   = none
